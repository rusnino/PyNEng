# -*- coding: utf-8 -*-
'''
Задание 9.4

Создать функцию, которая обрабатывает конфигурационный файл коммутатора
и возвращает словарь:
* Все команды верхнего уровня (глобального режима конфигурации), будут ключами.
* Если у команды верхнего уровня есть подкоманды, они должны быть в значении у соответствующего ключа, в виде списка (пробелы в начале строки можно оставлять).
* Если у команды верхнего уровня нет подкоманд, то значение будет пустым списком

Функция ожидает в качестве аргумента имя конфигурационного файла.

Проверить работу функции на примере файла config_sw1.txt

При обработке конфигурационного файла, надо игнорировать строки, которые начинаются с '!',
а также строки в которых содержатся слова из списка ignore.

Для проверки надо ли игнорировать строку, использовать функцию ignore_command.


Ограничение: Все задания надо выполнять используя только пройденные темы.
'''

ignore = ['duplex', 'alias', 'Current configuration']


def ignore_command(command, ignore):
    '''
    Функция проверяет содержится ли в команде слово из списка ignore.

    command - строка. Команда, которую надо проверить
    ignore - список. Список слов

    Возвращает
    * True, если в команде содержится слово из списка ignore
    * False - если нет
    '''
    return any(word in command for word in ignore)

def generate_config_dict(filename):
    '''
    В функции проверяется 2 условия, если строка является командой верхнего уровня(не начинается с пробела),
    то нужно сохранить ее в переменную keyword и "инициализировать" item в словаре config_dict с этим ключом.
    При следующей итерации(прочитывании новой строки), если всё таки она является командой второго уровня,
    то ее нужно дописать в список - значение словаря с ключом из предыдущей итерации.
    ''' 
    with open(filename, 'r') as f:
        config_dict = {}
        for line in f:
            if not line.startswith('!') and not ignore_command(line, ignore) and not line.startswith(' '):
                keyword = line.rstrip()
                config_dict[keyword] = []
            elif not line.startswith('!') and not ignore_command(line, ignore):
                config_dict[keyword].append(line.strip())
    return(config_dict)

config_dict = generate_config_dict('config_sw1.txt')
